[{"path":"https://spatlyu.github.io/geocomplexity/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wenbo Lv. Author, maintainer, copyright holder. Yongze Song. Author, reviewer, thesis advisor.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lv W, Song Y (2024). geocomplexity: Geocomplexity Mitigates Spatial Bias. R package version 0.0.0.9000, https://github.com/SpatLyu/geocomplexity/, https://spatlyu.github.io/geocomplexity/.","code":"@Manual{,   title = {geocomplexity: Geocomplexity Mitigates Spatial Bias},   author = {Wenbo Lv and Yongze Song},   year = {2024},   note = {R package version 0.0.0.9000, https://github.com/SpatLyu/geocomplexity/},   url = {https://spatlyu.github.io/geocomplexity/}, }"},{"path":"https://spatlyu.github.io/geocomplexity/index.html","id":"geocomplexity-","dir":"","previous_headings":"","what":"geocomplexity | Geocomplexity Mitigates Spatial Bias\n","title":"geocomplexity | Geocomplexity Mitigates Spatial Bias\n","text":"goal geocomplexity support geocomplexity computation applications.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"geocomplexity | Geocomplexity Mitigates Spatial Bias\n","text":"Full document recent release geocomplexity online: https://spatlyu.github.io/geocomplexity/","code":""},{"path":[]},{"path":"https://spatlyu.github.io/geocomplexity/index.html","id":"from-source","dir":"","previous_headings":"Installation","what":"From source:","title":"geocomplexity | Geocomplexity Mitigates Spatial Bias\n","text":"can install development version geocomplexity github : Please ensure appropriate C++ compilation environment configured Rcpp & RcppArmadillo properly installed advance want install geocomplexity source. See next topic C++ Settings information.","code":"# install.packages(\"devtools\") devtools::install_github(\"SpatLyu/geocomplexity\",                          dep = TRUE)"},{"path":"https://spatlyu.github.io/geocomplexity/index.html","id":"from-binary","dir":"","previous_headings":"Installation","what":"From binary","title":"geocomplexity | Geocomplexity Mitigates Spatial Bias\n","text":"can also install binary version geocomplexity r-universe:","code":"install.packages(\"geocomplexity\",                   repos = c(\"https://spatlyu.r-universe.dev\",                            \"https://cran.rstudio.com/\"),                  dep = TRUE)"},{"path":"https://spatlyu.github.io/geocomplexity/index.html","id":"set-up-to-use-c-compilation-environment","dir":"","previous_headings":"","what":"Set up to use C++ compilation environment","title":"geocomplexity | Geocomplexity Mitigates Spatial Bias\n","text":"Linux Debian/Ubuntu: Fedora/RedHat: set already. MacOS Option 1 , terminal: Option 2 Install current release full Xcode Mac App Store Within XCode go Preferences -> Downloads install Command Line Tools convenient installs lot don’t need Windows: Download Rtools installer matches version R https://cran.r-project.org/bin/windows/Rtools/ Run installer, Rtools.exe, keeping default settings.","code":"apt-get update apt-get install r-base-dev xcode-select --install"},{"path":"https://spatlyu.github.io/geocomplexity/reference/check_wt.html","id":null,"dir":"Reference","previous_headings":"","what":"check whether wt is a matrix class — check_wt","title":"check whether wt is a matrix class — check_wt","text":"check whether wt matrix class","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/check_wt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check whether wt is a matrix class — check_wt","text":"","code":"check_wt(wt)"},{"path":"https://spatlyu.github.io/geocomplexity/reference/check_wt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check whether wt is a matrix class — check_wt","text":"wt Spatial weight matrix","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/check_wt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check whether wt is a matrix class — check_wt","text":"wt matrix class, return wt , otherwise error raised execution stops.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/check_wt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check whether wt is a matrix class — check_wt","text":"","code":"data(\"income\") wt = inverse_distance_weight(income) wt = check_wt(wt) wt[1:5,1:5] #>              1            2            3            4            5 #> 1 0.000000e+00 8.154759e-06 8.868678e-06 9.068506e-06 8.075121e-06 #> 2 8.154759e-06 0.000000e+00 1.250288e-05 4.424774e-06 4.986257e-06 #> 3 8.868678e-06 1.250288e-05 0.000000e+00 4.506214e-06 4.392548e-06 #> 4 9.068506e-06 4.424774e-06 4.506214e-06 0.000000e+00 1.151216e-05 #> 5 8.075121e-06 4.986257e-06 4.392548e-06 1.151216e-05 0.000000e+00"},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocd_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"geocomplexity for raster data based on spatial dependence — geocd_raster","title":"geocomplexity for raster data based on spatial dependence — geocd_raster","text":"function calculates geocomplexity raster data based spatial dependence.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocd_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geocomplexity for raster data based on spatial dependence — geocd_raster","text":"","code":"geocd_raster(r, order = 1, normalize = TRUE)"},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocd_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geocomplexity for raster data based on spatial dependence — geocd_raster","text":"r Raster object can converted SpatRaster terra::rast(). order (optional) order adjacency object. Default 1. normalize (optional) Whether normalizes calculated geocomplexity. Default TRUE.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocd_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"geocomplexity for raster data based on spatial dependence — geocd_raster","text":"SpatRaster object","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocd_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"geocomplexity for raster data based on spatial dependence — geocd_raster","text":"","code":"library(terra) #> terra 1.7.78 m = matrix(c(3,3,3,3,1,3,              3,3,3,2,1,2,              3,3,3,1,2,1,              1,3,2,2,2,2,              2,2,2,1,1,2,              1,2,1,1,1,1),            nrow = 6,            byrow = TRUE) m = rast(m) names(m) = 'sim' plot(m, col = c(\"#d2eaac\", \"#a3dae1\", \"#8cc1e1\"))  gc1 = geocd_raster(m,1) gc2 = geocd_raster(m,2) gc1 #> class       : SpatRaster  #> dimensions  : 6, 6, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 6, 0, 6  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        : Geocomplexity_sim  #> min value   :                 0  #> max value   :                 1  gc2 #> class       : SpatRaster  #> dimensions  : 6, 6, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 6, 0, 6  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        : Geocomplexity_sim  #> min value   :                 0  #> max value   :                 1"},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocd_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"geocomplexity for vector data based on spatial dependence — geocd_vector","title":"geocomplexity for vector data based on spatial dependence — geocd_vector","text":"function calculates geocomplexity vector data based spatial dependence.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocd_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geocomplexity for vector data based on spatial dependence — geocd_vector","text":"","code":"geocd_vector(sfj, wt = NULL, normalize = TRUE)"},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocd_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geocomplexity for vector data based on spatial dependence — geocd_vector","text":"sfj sf object vector object can converted sf sf::st_as_sf(). wt (optional) Spatial weight matrix. Must matrix class. can get spatial weight matrix spdep,rgeoda tidyrgeoda package. wt provided, geocomplexity use first-order queen adjacency binary matrix via spdep package. normalize (optional) Whether normalizes calculated geocomplexity. Default TRUE.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocd_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"geocomplexity for vector data based on spatial dependence — geocd_vector","text":"sf object","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocd_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"geocomplexity for vector data based on spatial dependence — geocd_vector","text":"","code":"data(\"income\") inc = dplyr::select(income,Income) gc = geocd_vector(inc) gc #> Simple feature collection with 333 features and 1 field #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 112.9211 ymin: -43.63305 xmax: 153.6299 ymax: -9.223927 #> Geodetic CRS:  GDA94 #> # A tibble: 333 × 2 #>    Geocomplexity_Income                                                 geometry #>                   <dbl>                                       <MULTIPOLYGON [°]> #>  1                0.663 (((149.979 -35.50246, 149.964 -35.50079, 149.9494 -35.5… #>  2                0.642 (((148.8041 -35.71402, 148.8279 -35.72615, 148.8347 -35… #>  3                0.636 (((150.3754 -35.56524, 150.3647 -35.57078, 150.3226 -35… #>  4                0.671 (((149.0114 -33.93276, 149.0251 -33.93214, 149.0335 -33… #>  5                0.638 (((147.7137 -34.16162, 147.7441 -34.14091, 147.7769 -34… #>  6                0.668 (((151.485 -33.39868, 151.4689 -33.40979, 151.4439 -33.… #>  7                0.676 (((151.485 -33.39868, 151.4623 -33.39893, 151.4539 -33.… #>  8                0.656 (((149.323 -33.05916, 149.3436 -33.06254, 149.3543 -33.… #>  9                0.619 (((149.1264 -33.86642, 149.1198 -33.88783, 149.1048 -33… #> 10                0.673 (((150.5587 -32.75774, 150.5493 -32.77053, 150.557 -32.… #> # ℹ 323 more rows  library(ggplot2) library(viridis) #> Loading required package: viridisLite ggplot(gc) +    geom_sf(aes(fill = Geocomplexity_Income)) +    scale_fill_viridis(option=\"mako\", direction = -1) +    theme_bw()"},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocs_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"geocomplexity for raster data based on geographical similarity — geocs_raster","title":"geocomplexity for raster data based on geographical similarity — geocs_raster","text":"function calculates geocomplexity raster data based geographical similarity.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocs_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geocomplexity for raster data based on geographical similarity — geocs_raster","text":"","code":"geocs_raster(r, order = 1, normalize = TRUE, method = 1)"},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocs_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geocomplexity for raster data based on geographical similarity — geocs_raster","text":"r Raster object can converted SpatRaster terra::rast(). order (optional) order adjacency object. Default 1. normalize (optional) Whether normalizes calculated geocomplexity. Default TRUE. method (optional) method 1, similarity calculated using geographical configuration similarity, otherwise cosine similarity calculated. Default 1.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocs_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"geocomplexity for raster data based on geographical similarity — geocs_raster","text":"SpatRaster object","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocs_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"geocomplexity for raster data based on geographical similarity — geocs_raster","text":"","code":"library(terra) m1 = matrix(c(3,3,3,3,1,3,               3,3,3,2,1,2,               3,3,3,1,2,1,               1,3,2,2,2,2,               2,2,2,1,1,2,               1,2,1,1,1,1),            nrow = 6,            byrow = TRUE) m1 = rast(m1) names(m1) = 'sim1' m2 = m1 set.seed(123456789) values(m2) = values(m1) + runif(ncell(m1),-1,1) names(m2) = 'sim2' m = c(m1,m2) gc1 = geocs_raster(m,1) gc2 = geocs_raster(m,2) gc1 #> class       : SpatRaster  #> dimensions  : 6, 6, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 6, 0, 6  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        : Geocomplexity_sim1_sim2  #> min value   :                       0  #> max value   :                       1  gc2 #> class       : SpatRaster  #> dimensions  : 6, 6, 1  (nrow, ncol, nlyr) #> resolution  : 1, 1  (x, y) #> extent      : 0, 6, 0, 6  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        : Geocomplexity_sim1_sim2  #> min value   :                       0  #> max value   :                       1"},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocs_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"geocomplexity for vector data based on geographical similarity — geocs_vector","title":"geocomplexity for vector data based on geographical similarity — geocs_vector","text":"function calculates geocomplexity vector data based geographical similarity.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocs_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"geocomplexity for vector data based on geographical similarity — geocs_vector","text":"","code":"geocs_vector(sfj, wt = NULL, normalize = TRUE, method = 1)"},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocs_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"geocomplexity for vector data based on geographical similarity — geocs_vector","text":"sfj sf object vector object can converted sf sf::st_as_sf(). wt (optional) Spatial weight matrix. Must matrix class. can get spatial weight matrix spdep,rgeoda tidyrgeoda package. wt provided, geocomplexity use first-order inverse distance weight matrix via inverse_distance_weight(). normalize (optional) Whether normalizes calculated geocomplexity. Default TRUE. method (optional) method 1, similarity calculated using geographical configuration similarity, otherwise cosine similarity calculated. Default 1.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocs_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"geocomplexity for vector data based on geographical similarity — geocs_vector","text":"sf object","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/geocs_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"geocomplexity for vector data based on geographical similarity — geocs_vector","text":"","code":"data(\"income\") income = dplyr::select(income,-SA3_CODE16) gc = geocs_vector(income) gc #> Simple feature collection with 333 features and 1 field #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 112.9211 ymin: -43.63305 xmax: 153.6299 ymax: -9.223927 #> Geodetic CRS:  GDA94 #> # A tibble: 333 × 2 #>    Geocomplexity_Income_Gini                                            geometry #>                        <dbl>                                  <MULTIPOLYGON [°]> #>  1                     0.623 (((149.979 -35.50246, 149.964 -35.50079, 149.9494 … #>  2                     0.741 (((148.8041 -35.71402, 148.8279 -35.72615, 148.834… #>  3                     0.620 (((150.3754 -35.56524, 150.3647 -35.57078, 150.322… #>  4                     0.848 (((149.0114 -33.93276, 149.0251 -33.93214, 149.033… #>  5                     0.725 (((147.7137 -34.16162, 147.7441 -34.14091, 147.776… #>  6                     0.724 (((151.485 -33.39868, 151.4689 -33.40979, 151.4439… #>  7                     0.898 (((151.485 -33.39868, 151.4623 -33.39893, 151.4539… #>  8                     0.845 (((149.323 -33.05916, 149.3436 -33.06254, 149.3543… #>  9                     0.674 (((149.1264 -33.86642, 149.1198 -33.88783, 149.104… #> 10                     0.735 (((150.5587 -32.75774, 150.5493 -32.77053, 150.557… #> # ℹ 323 more rows  library(ggplot2) library(viridis) ggplot(gc) +    geom_sf(aes(fill = Geocomplexity_Income_Gini)) +    scale_fill_viridis(option=\"mako\", direction = -1) +    theme_bw()"},{"path":"https://spatlyu.github.io/geocomplexity/reference/income.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial datasets of income. — income","title":"Spatial datasets of income. — income","text":"Spatial datasets income.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/income.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial datasets of income. — income","text":"","code":"income"},{"path":"https://spatlyu.github.io/geocomplexity/reference/income.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spatial datasets of income. — income","text":"income: sf object income","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/income.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Spatial datasets of income. — income","text":"Yongze Song yongze.song@curtin.edu.au","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/inverse_distance_weight.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate inverse distance weight — inverse_distance_weight","title":"calculate inverse distance weight — inverse_distance_weight","text":"Function calculate inverse distance weight.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/inverse_distance_weight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate inverse distance weight — inverse_distance_weight","text":"","code":"inverse_distance_weight(sfj, power = 1)"},{"path":"https://spatlyu.github.io/geocomplexity/reference/inverse_distance_weight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate inverse distance weight — inverse_distance_weight","text":"sfj Vector object can converted sf sf::st_as_sf(). power (optional) Default 1. Set 2 gravity weights.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/inverse_distance_weight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate inverse distance weight — inverse_distance_weight","text":"inverse distance weight matrices class matrix.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/inverse_distance_weight.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"calculate inverse distance weight — inverse_distance_weight","text":"inverse distance weight formula \\(w_{ij} = 1 / d_{ij}^\\alpha\\)","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/inverse_distance_weight.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calculate inverse distance weight — inverse_distance_weight","text":"Wenbo Lv lyu.geosocial@gmail.com","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/inverse_distance_weight.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"calculate inverse distance weight — inverse_distance_weight","text":"","code":"data(\"income\") wt = inverse_distance_weight(income) wt[1:5,1:5] #>              1            2            3            4            5 #> 1 0.000000e+00 8.154759e-06 8.868678e-06 9.068506e-06 8.075121e-06 #> 2 8.154759e-06 0.000000e+00 1.250288e-05 4.424774e-06 4.986257e-06 #> 3 8.868678e-06 1.250288e-05 0.000000e+00 4.506214e-06 4.392548e-06 #> 4 9.068506e-06 4.424774e-06 4.506214e-06 0.000000e+00 1.151216e-05 #> 5 8.075121e-06 4.986257e-06 4.392548e-06 1.151216e-05 0.000000e+00"},{"path":"https://spatlyu.github.io/geocomplexity/reference/moran_test.html","id":null,"dir":"Reference","previous_headings":"","what":"global spatial autocorrelation test — moran_test","title":"global spatial autocorrelation test — moran_test","text":"Spatial autocorrelation test based global Moran'Index.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/moran_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"global spatial autocorrelation test — moran_test","text":"","code":"moran_test(sfj, wt = NULL, alternative = \"greater\", symmetrize = FALSE)"},{"path":"https://spatlyu.github.io/geocomplexity/reference/moran_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"global spatial autocorrelation test — moran_test","text":"sfj sf object vector object can converted sf sf::st_as_sf(). wt (optional) Spatial weight matrix. Must matrix class. can get spatial weight matrix spdep,rgeoda tidyrgeoda package. wt provided, geocomplexity use first-order queen adjacency binary matrix via spdep package. alternative (optional) Specification alternative hypothesis 'greater' (default), 'lower', 'two.sided'. symmetrize (optional) Whether symmetrize asymmetrical spatial weight matrix wt : 1/2 * (wt + wt'). Default FALSE.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/moran_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"global spatial autocorrelation test — moran_test","text":"list moran_test class result stored result tibble. contains following information variable: observed value Moran coefficient EI expected value Moran's VarI variance Moran's (normality) zI standardized Moran coefficient pI p-value test statistic","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/moran_test.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"global spatial autocorrelation test — moran_test","text":"C++ implementation MI.vec function spfilteR package, embellishes console output. return result function actually list, please access result tibble using $result. non-numeric columns attribute columns sfj ignored.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/moran_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"global spatial autocorrelation test — moran_test","text":"","code":"data(\"income\") moran_test(income) #>  #>                  * global spatial autocorrelation test *               #>  #>  #> | Variable |    I     |    EI     |   VarI   |    zI    | pI | Significance | #> |:--------:|:--------:|:---------:|:--------:|:--------:|:--:|:------------:| #> |  Income  | 0.385718 | -0.003012 | 0.001239 | 11.04239 | 0  |     ***      | #> |   Gini   | 0.397324 | -0.003012 | 0.001239 | 11.37209 | 0  |     ***      |"},{"path":"https://spatlyu.github.io/geocomplexity/reference/normalize_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"normalization — normalize_vector","title":"normalization — normalize_vector","text":"normalization","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/normalize_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"normalization — normalize_vector","text":"","code":"normalize_vector(x)"},{"path":"https://spatlyu.github.io/geocomplexity/reference/normalize_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"normalization — normalize_vector","text":"x continuous numeric vector.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/normalize_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"normalization — normalize_vector","text":"continuous vector normalized.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/normalize_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"normalization — normalize_vector","text":"","code":"normalize_vector(c(-5,1,5,0.01,0.99)) #> [1] 0.000 0.600 1.000 0.501 0.599"},{"path":"https://spatlyu.github.io/geocomplexity/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://spatlyu.github.io/geocomplexity/reference/st_geometry_name.html","id":null,"dir":"Reference","previous_headings":"","what":"get the geometry column name of an sf object — st_geometry_name","title":"get the geometry column name of an sf object — st_geometry_name","text":"get geometry column name sf object","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/st_geometry_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the geometry column name of an sf object — st_geometry_name","text":"","code":"st_geometry_name(sfj)"},{"path":"https://spatlyu.github.io/geocomplexity/reference/st_geometry_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the geometry column name of an sf object — st_geometry_name","text":"sfj sf object.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/st_geometry_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the geometry column name of an sf object — st_geometry_name","text":"character.","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/st_geometry_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get the geometry column name of an sf object — st_geometry_name","text":"","code":"data(\"income\") st_geometry_name(income) #> [1] \"geometry\""},{"path":"https://spatlyu.github.io/geocomplexity/reference/standardize_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"standardization — standardize_vector","title":"standardization — standardize_vector","text":"standardization","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/standardize_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"standardization — standardize_vector","text":"","code":"standardize_vector(x)"},{"path":"https://spatlyu.github.io/geocomplexity/reference/standardize_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"standardization — standardize_vector","text":"x numeric vector","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/standardize_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"standardization — standardize_vector","text":"standardized numeric vector","code":""},{"path":"https://spatlyu.github.io/geocomplexity/reference/standardize_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"standardization — standardize_vector","text":"","code":"standardize_vector(1:10) #>  [1] -1.4863011 -1.1560120 -0.8257228 -0.4954337 -0.1651446  0.1651446 #>  [7]  0.4954337  0.8257228  1.1560120  1.4863011"}]
