// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// RasterGeocDependenceOne
double RasterGeocDependenceOne(NumericVector x);
RcppExport SEXP _geocomplexity_RasterGeocDependenceOne(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(RasterGeocDependenceOne(x));
    return rcpp_result_gen;
END_RCPP
}
// RasterGeocDependence
NumericVector RasterGeocDependence(NumericVector x, size_t ni, size_t nw);
RcppExport SEXP _geocomplexity_RasterGeocDependence(SEXP xSEXP, SEXP niSEXP, SEXP nwSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< size_t >::type ni(niSEXP);
    Rcpp::traits::input_parameter< size_t >::type nw(nwSEXP);
    rcpp_result_gen = Rcpp::wrap(RasterGeocDependence(x, ni, nw));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_geocomplexity_RasterGeocDependenceOne", (DL_FUNC) &_geocomplexity_RasterGeocDependenceOne, 1},
    {"_geocomplexity_RasterGeocDependence", (DL_FUNC) &_geocomplexity_RasterGeocDependence, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_geocomplexity(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
